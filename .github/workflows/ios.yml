name: iOS starter workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test default scheme using iPhone simulator
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Default Scheme to Stockpile
        run: |
          default=Stockpile
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          if [ $scheme = default ]; then scheme=$(cat default); fi
          filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=iPhone 13"
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          if [ $scheme = default ]; then scheme=$(cat default); fi
          filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=iPhone 13" 2>&1
